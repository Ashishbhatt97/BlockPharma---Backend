// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  firstName          String
  lastName           String
  email              String               @unique
  password           String
  role               Role                 @default(USER)
  phoneNumber        String
  profilePic         String?
  oAuthId            String?
  provider           String?
  isDeleted          Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Address            Address?
  VendorOwner        VendorOwner?
  VendorOrganization VendorOrganization[]
  Pharmacist         Pharmacist?
  PharmacyOutlet     PharmacyOutlet[]
}

enum Role {
  USER
  ADMIN
  SUPPLIER
  PHARMACY
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  street    String
  city      String
  state     String
  country   String
  zipCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VendorOwner {
  vendorId            BigInt               @id @default(autoincrement())
  userId              String               @unique
  VendorOrganizations VendorOrganization[]
  user                User                 @relation(fields: [userId], references: [id])
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model VendorOrganization {
  orgId         BigInt      @id @default(autoincrement())
  vendorOwnerId BigInt
  businessName  String
  gstin         String      @unique
  email         String      @unique
  street        String
  city          String
  state         String
  pincode       Int
  isActive      Boolean     @default(true)
  phoneNumber   String
  website       String?
  userId        String
  user          User        @relation(fields: [userId], references: [id])
  VendorOwner   VendorOwner @relation(fields: [vendorOwnerId], references: [vendorId])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Pharmacist {
  pharmacistId    BigInt           @id @default(autoincrement())
  userId          String           @unique
  user            User             @relation(fields: [userId], references: [id])
  pharmacyOutlets PharmacyOutlet[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model PharmacyOutlet {
  pharmacyOutletId  BigInt     @id @default(autoincrement())
  pharmacistOwnerId BigInt
  businessName      String
  street            String
  city              String
  state             String
  pincode           Int
  phoneNumber       String
  gstin             String     @unique
  email             String     @unique
  website           String?
  userId            String
  user              User       @relation(fields: [userId], references: [id])
  pharmacist        Pharmacist @relation(fields: [pharmacistOwnerId], references: [pharmacistId])
  isActive          Boolean    @default(true)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}
